{"version":3,"sources":["hooks/MemoryContext.js","components/Line.js","components/LineContainer.js","components/RegisterValues.js","components/Editor.js","App.js","index.js"],"names":["MemoryContext","React","createContext","MemoryProvider","children","useState","stack","Array","fill","AC","PC","memory","setMemory","Provider","value","Line","lineNum","useContext","getValue","at","val","Number","commands","NULL","_","__","prev","STOP","LOAD","STORE","map","el","i","JUMP","JNEG","JZERO","ADD","SUB","MULT","DIV","MOD","OR","AND","NOT","console","log","className","type","onBlur","e","operation","split","command","addressType","doOperation","target","toUpperCase","error","LineContainer","lineCount","useEffect","inputList","document","querySelectorAll","length","RegisterValues","Editor","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"gLAEaA,EAAgBC,IAAMC,gBAEtBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAA4BC,mBAAS,CACpCC,MAAOC,MAAM,IAAIC,KAAK,GACtBC,GAAI,EACJC,GAAI,IAHL,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACC,cAACZ,EAAca,SAAf,CAAwBC,MAAO,CAAEH,SAAQC,aAAzC,SACER,KC8KWW,EAxLF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,EAA8BC,qBAAWjB,GAAjCW,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEVM,EAAW,SAAXA,EAAYC,EAAIC,GACrB,OAAQD,GACP,IAAK,IACJ,OAAOE,OAAOD,GACf,IAAK,IACJ,OAAOC,OAAOV,EAAOL,MAAMc,IAC5B,IAAK,IACJ,OAAOC,OAAOV,EAAOL,MAAMY,EAAS,IAAKE,OAmItCE,EAAW,CAChBC,KAhIkB,SAACC,EAAGC,GACtBb,GAAU,SAAAc,GACT,OAAO,2BAAKA,GAAZ,IAAkBhB,GAAIgB,EAAKhB,GAAK,QA+HjCiB,KA3HkB,SAACH,EAAGC,GACtB,OAAO,GA2HPG,KAxHkB,SAACT,EAAIC,GACvBR,GAAU,SAAAc,GACT,OAAO,2BACHA,GADJ,IAECjB,GAAIS,EAASC,EAAIC,GACjBV,GAAIgB,EAAKhB,GAAK,QAoHhBmB,MA/GmB,SAACV,EAAIC,GACxBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbpB,MAAOoB,EAAKpB,MAAMwB,KAAI,SAACC,EAAIC,GAAL,OACrBA,GAAKd,EAASC,EAAIC,GAAOT,EAAOF,GAAKsB,KAEtCrB,GAAIgB,EAAKhB,GAAK,QA0GfuB,KAtGkB,SAACd,EAAIC,GACvBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbhB,GAAIQ,EAASC,EAAIC,SAoGlBc,KAhGkB,SAACf,EAAIC,GACnBT,EAAOF,GAAK,EACfG,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbhB,GAAIQ,EAASC,EAAIC,QAGlBR,GAAU,SAAAc,GACT,OAAO,2BAAKA,GAAZ,IAAkBhB,GAAIgB,EAAKhB,GAAK,QAyFlCyB,MApFmB,SAAChB,EAAIC,GACP,GAAbT,EAAOF,GACVG,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbhB,GAAIQ,EAASC,EAAIC,QAGlBR,GAAU,SAAAc,GACT,OAAO,2BAAKA,GAAZ,IAAkBhB,GAAIgB,EAAKhB,GAAK,QA6ElC0B,IAxEiB,SAACjB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,GAAIY,OAAOK,EAAKjB,IAAMS,EAASC,EAAIC,GACnCV,GAAIgB,EAAKhB,GAAK,QAqEf2B,IAjEiB,SAAClB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,GAAIY,OAAOK,EAAKjB,IAAMS,EAASC,EAAIC,GACnCV,GAAIgB,EAAKhB,GAAK,QA8Df4B,KA1DkB,SAACnB,EAAIC,GACvBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,GAAIiB,EAAKjB,GAAKS,EAASC,EAAIC,GAC3BV,GAAIgB,EAAKhB,GAAK,QAuDf6B,IAnDiB,SAACpB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,GAAIiB,EAAKjB,GAAKS,EAASC,EAAIC,GAC3BV,GAAIgB,EAAKhB,GAAK,QAgDf8B,IA5CiB,SAACrB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,GAAIiB,EAAKjB,GAAKS,EAASC,EAAIC,GAC3BV,GAAIgB,EAAKhB,GAAK,QAyCf+B,GArCgB,SAACtB,EAAIC,GACrBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,MAAIiB,EAAKjB,KAAMS,EAASC,EAAIC,IAC5BV,GAAIgB,EAAKhB,GAAK,QAkCfgC,IA9BiB,SAACvB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,MAAIiB,EAAKjB,KAAMS,EAASC,EAAIC,IAC5BV,GAAIgB,EAAKhB,GAAK,QA2BfiC,IAvBiB,SAACxB,EAAIC,GACtBR,GAAU,SAAAc,GAAI,kCACVA,GADU,IAEbjB,IAAKS,EAASC,EAAIC,GAClBV,GAAIgB,EAAKhB,GAAK,SAuChB,OAFAkC,QAAQC,IAAIlC,GAGX,sBAAKmC,UAAU,OAAf,UACC,sBAAKA,UAAU,iBAAf,UAAiC9B,EAAjC,OACA,uBAAO+B,KAAK,OAAOC,OAfA,SAAAC,GACpB,KANmB,SAAAC,GACnB,MAAsCA,EAAUC,MAAM,KAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KAA6BvC,EAA7B,KACOQ,EAAS8B,GAASC,EAAavC,GAKrCwC,CAAYL,EAAEM,OAAOzC,MAAM0C,eAC1B,MAAOC,GACRb,QAAQa,MAAMA,WChJFC,EAvBO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxB,EAA8B1C,qBAAWjB,GAAjCW,EAAR,EAAQA,OAAR,EAAgBC,UAWhB,OATAgD,qBAAU,WAET,IADA,IAAMC,EAAYC,SAASC,iBAAiB,iBACnC/B,EAAI,EAAGA,EAAI6B,EAAUG,OAAQhC,IACjCrB,EAAOL,MAAM0B,KAChB6B,EAAU7B,GAAGlB,MAAQH,EAAOL,MAAM0B,MAGlC,CAACrB,EAAOL,QAGV,qBAAKwC,UAAU,iBAAf,SACEvC,MAAMoD,GACLnD,KAAK,GACLsB,KAAI,SAACN,EAAGQ,GAAJ,OACJ,cAAC,EAAD,CAAMhB,QAASgB,UCRLiC,EAVQ,WACtB,MAA8BhD,qBAAWjB,GAAjCW,EAAR,EAAQA,OAAR,EAAgBC,UAChB,OACC,sBAAKkC,UAAU,kBAAf,UACC,wCAAWnC,EAAOF,MAClB,wCAAWE,EAAOD,UCONwD,EAXA,WACd,MAA8B7D,mBAAS,IAAvC,mBAAOsD,EAAP,UAEA,OACC,sBAAKb,UAAU,SAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAea,UAAWA,QCIdQ,G,MAVH,WACX,OACC,qBAAKrB,UAAU,iBAAf,SACC,cAAC,EAAD,UACC,cAAC,EAAD,UCJJsB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDR,SAASS,eAAe,W","file":"static/js/main.1f6774b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const MemoryContext = React.createContext();\r\n\r\nexport const MemoryProvider = ({ children }) => {\r\n\tconst [memory, setMemory] = useState({\r\n\t\tstack: Array(31).fill(0),\r\n\t\tAC: 0,\r\n\t\tPC: 0,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<MemoryContext.Provider value={{ memory, setMemory }}>\r\n\t\t\t{children}\r\n\t\t</MemoryContext.Provider>\r\n\t);\r\n};\r\n","import { useContext, useEffect } from 'react';\r\nimport { MemoryContext } from '../hooks/MemoryContext';\r\n\r\nconst Line = ({ lineNum }) => {\r\n\tconst { memory, setMemory } = useContext(MemoryContext);\r\n\r\n\tconst getValue = (at, val) => {\r\n\t\tswitch (at) {\r\n\t\t\tcase '$':\r\n\t\t\t\treturn Number(val);\r\n\t\t\tcase '@':\r\n\t\t\t\treturn Number(memory.stack[val]);\r\n\t\t\tcase '&':\r\n\t\t\t\treturn Number(memory.stack[getValue('@', val)]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleNULL = (_, __) => {\r\n\t\tsetMemory(prev => {\r\n\t\t\treturn { ...prev, PC: prev.PC + 1 };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSTOP = (_, __) => {\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tconst handleLOAD = (at, val) => {\r\n\t\tsetMemory(prev => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\tAC: getValue(at, val),\r\n\t\t\t\tPC: prev.PC + 1,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSTORE = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tstack: prev.stack.map((el, i) =>\r\n\t\t\t\ti == getValue(at, val) ? memory.AC : el\r\n\t\t\t),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleJUMP = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tPC: getValue(at, val),\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleJNEG = (at, val) => {\r\n\t\tif (memory.AC < 0) {\r\n\t\t\tsetMemory(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\tPC: getValue(at, val),\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tsetMemory(prev => {\r\n\t\t\t\treturn { ...prev, PC: prev.PC + 1 };\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleJZERO = (at, val) => {\r\n\t\tif (memory.AC == 0) {\r\n\t\t\tsetMemory(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\tPC: getValue(at, val),\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tsetMemory(prev => {\r\n\t\t\t\treturn { ...prev, PC: prev.PC + 1 };\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleADD = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: Number(prev.AC) + getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleSUB = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: Number(prev.AC) - getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleMULT = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: prev.AC * getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleDIV = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: prev.AC / getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleMOD = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: prev.AC % getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleOR = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: prev.AC || getValue(at, val) ? true : false,\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleAND = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: prev.AC && getValue(at, val) ? true : false,\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleNOT = (at, val) => {\r\n\t\tsetMemory(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tAC: !getValue(at, val),\r\n\t\t\tPC: prev.PC + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst commands = {\r\n\t\tNULL: handleNULL,\r\n\t\tSTOP: handleSTOP,\r\n\t\tLOAD: handleLOAD,\r\n\t\tSTORE: handleSTORE,\r\n\t\tJUMP: handleJUMP,\r\n\t\tJNEG: handleJNEG,\r\n\t\tJZERO: handleJZERO,\r\n\t\tADD: handleADD,\r\n\t\tSUB: handleSUB,\r\n\t\tMULT: handleMULT,\r\n\t\tDIV: handleDIV,\r\n\t\tMOD: handleMOD,\r\n\t\tOR: handleOR,\r\n\t\tAND: handleAND,\r\n\t\tNOT: handleNOT,\r\n\t};\r\n\r\n\tconst doOperation = operation => {\r\n\t\tconst [command, addressType, value] = operation.split(' ');\r\n\t\treturn commands[command](addressType, value);\r\n\t};\r\n\r\n\tconst handleChange = e => {\r\n\t\ttry {\r\n\t\t\tdoOperation(e.target.value.toUpperCase());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkIfValidCommand = val => {};\r\n\r\n\tconsole.log(memory);\r\n\r\n\treturn (\r\n\t\t<div className=\"line\">\r\n\t\t\t<div className=\"line-count-num\">{lineNum}.</div>\r\n\t\t\t<input type=\"text\" onBlur={handleChange}></input>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Line;\r\n","import Line from './Line';\r\nimport { useEffect, useContext } from 'react';\r\nimport { MemoryContext } from '../hooks/MemoryContext';\r\n\r\nconst LineContainer = ({ lineCount }) => {\r\n\tconst { memory, setMemory } = useContext(MemoryContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst inputList = document.querySelectorAll('.line > input');\r\n\t\tfor (let i = 0; i < inputList.length; i++) {\r\n\t\t\tif (memory.stack[i]) {\r\n\t\t\t\tinputList[i].value = memory.stack[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}, [memory.stack]);\r\n\r\n\treturn (\r\n\t\t<div className=\"line-container\">\r\n\t\t\t{Array(lineCount)\r\n\t\t\t\t.fill(0)\r\n\t\t\t\t.map((_, i) => (\r\n\t\t\t\t\t<Line lineNum={i} />\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineContainer;\r\n","import { useContext } from 'react';\r\nimport { MemoryContext } from '../hooks/MemoryContext';\r\n\r\nconst RegisterValues = () => {\r\n\tconst { memory, setMemory } = useContext(MemoryContext);\r\n\treturn (\r\n\t\t<div className=\"register-values\">\r\n\t\t\t<span>AC: {memory.AC}</span>\r\n\t\t\t<span>PC: {memory.PC}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegisterValues;\r\n","import LineContainer from './LineContainer';\r\nimport RegisterValues from './RegisterValues';\r\nimport { useState } from 'react';\r\n\r\nconst Editor = () => {\r\n\tconst [lineCount, setLines] = useState(21);\r\n\r\n\treturn (\r\n\t\t<div className=\"editor\">\r\n\t\t\t<RegisterValues />\r\n\t\t\t<LineContainer lineCount={lineCount} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Editor;\r\n","import Editor from './components/Editor';\r\nimport { MemoryProvider } from './hooks/MemoryContext';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"main-container\">\r\n\t\t\t<MemoryProvider>\r\n\t\t\t\t<Editor />\r\n\t\t\t</MemoryProvider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}